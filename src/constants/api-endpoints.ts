export const API_ENDPOINTS = {
    AUTH: {
        SIGN_IN: '/auth/sign-in',
        SIGN_UP: '/auth/sign-up',
        LOGOUT: '/auth/logout',
        LOGOUT_ALL: '/auth/logout-all',
        ME: '/auth/me',
        REFRESH_TOKEN: '/auth/refresh-token',
        CHANGE_PASSWORD: '/auth/change-password',
        FORGOT_PASSWORD: '/auth/forgot-password',
        RESET_PASSWORD: '/auth/reset-password',
        GOOGLE_AUTH: '/auth/google',
        GOOGLE_AUTH_CALLBACK: '/auth/google/callback',
        GOOGLE_GENERATE_URL: '/auth/google/generate-url',
    },
    USERS: {
        LIST: '/users',
        PROFILE: '/users/profile',
        STATS: '/users/stats',
        BULK_UPDATE: '/users/bulk-update',
        BY_ID: (id: string) => `/users/${id}`,
        UPDATE: (id: string) => `/users/${id}`,
        DELETE: (id: string) => `/users/${id}`,
        STATUS: (id: string) => `/users/${id}/status`,
        ROLE: (id: string) => `/users/${id}/role`,
    },
    DATABASES: {
        LIST: '/databases',
        CREATE: '/databases',
        BY_ID: (id: string) => `/databases/${id}`,
        UPDATE: (id: string) => `/databases/${id}`,
        DELETE: (id: string) => `/databases/${id}`,
        FREEZE: (id: string) => `/databases/${id}/freeze`,
        SHARE: (id: string) => `/databases/${id}/share`,
        REMOVE_ACCESS: (id: string, userId: string) => `/databases/${id}/share/${userId}`,
        PROPERTIES: (id: string) => `/databases/${id}/properties`,
        PROPERTY: (id: string, propertyId: string) => `/databases/${id}/properties/${propertyId}`,
        // Property Management Endpoints
        UPDATE_PROPERTY_NAME: (id: string, propertyId: string) => `/databases/${id}/properties/${propertyId}/name`,
        UPDATE_PROPERTY_TYPE: (id: string, propertyId: string) => `/databases/${id}/properties/${propertyId}/type`,
        REORDER_PROPERTY: (id: string, propertyId: string) => `/databases/${id}/properties/${propertyId}/order`,
        INSERT_PROPERTY: (id: string, propertyId: string) => `/databases/${id}/properties/${propertyId}/insert`,
        DUPLICATE_PROPERTY: (id: string, propertyId: string) => `/databases/${id}/properties/${propertyId}/duplicate`,
        FREEZE_PROPERTY: (id: string, propertyId: string) => `/databases/${id}/properties/${propertyId}/freeze`,
        HIDE_PROPERTY: (id: string, propertyId: string) => `/databases/${id}/properties/${propertyId}/visibility`,
        PROPERTY_VISIBILITY: (id: string, propertyId: string) => `/databases/${id}/properties/${propertyId}/visibility`,
        VIEWS: (id: string) => `/databases/${id}/views`,
        VIEW: (id: string, viewId: string) => `/databases/${id}/views/${viewId}`,
        VIEW_BY_ID: (id: string, viewId: string) => `/databases/${id}/views/${viewId}`,
        RECORDS: (id: string) => `/databases/${id}/records`,
        RECORD: (id: string, recordId: string) => `/databases/${id}/records/${recordId}`,
        // Enhanced features from API docs
        TOGGLE_FAVORITE: (id: string) => `/databases/${id}/favorite`,
        MOVE_TO_CATEGORY: (id: string) => `/databases/${id}/category`,
        DUPLICATE: (id: string) => `/databases/${id}/duplicate`,
        EXPORT: (id: string) => `/databases/${id}/export`,
        IMPORT: (id: string) => `/databases/${id}/import`,
    },
    DASHBOARD: {
        STATS: '/dashboard/stats',
        ANALYTICS: '/dashboard/analytics',
        ACTIVITY: '/dashboard/activity',
        TASKS: '/dashboard/tasks',
        NOTIFICATIONS: '/dashboard/notifications',
        LAYOUTS: '/dashboard/layouts',
        PREFERENCES: '/dashboard/preferences',
        QUICK_ACTIONS: '/dashboard/quick-actions',
    },
    ANALYTICS: {
        DASHBOARD: '/analytics/dashboard',
        DATABASE: (id: string) => `/analytics/databases/${id}`,
        USAGE: '/analytics/usage',
        EVENTS: '/analytics/events',
        ACTIVITY: '/analytics/activity',
    },
    SEARCH: {
        GLOBAL: '/search/global',
        DATABASES: '/search/databases',
        RECORDS: '/search/records',
        SUGGESTIONS: '/search/suggestions',
        HISTORY: '/search/history',
        SAVED: '/search/saved',
        ADVANCED: '/search/advanced',
    },
    PROFILE: {
        GET: '/profile',
        UPDATE: '/profile',
    },
    CATEGORIES: {
        LIST: '/categories',
        CREATE: '/categories',
        BY_ID: (id: string) => `/categories/${id}`,
        UPDATE: (id: string) => `/categories/${id}`,
        DELETE: (id: string) => `/categories/${id}`,
        REORDER: '/categories/reorder',
    },
    TEMPLATES: {
        LIST: '/templates',
        BY_ID: (id: string) => `/templates/${id}`,
        CREATE_FROM: (id: string) => `/templates/${id}/create`,
    },
    WORKSPACES: {
        LIST: '/workspaces',
        CREATE: '/workspaces',
        BY_ID: (id: string) => `/workspaces/${id}`,
        UPDATE: (id: string) => `/workspaces/${id}`,
        DELETE: (id: string) => `/workspaces/${id}`,
        DUPLICATE: (id: string) => `/workspaces/${id}/duplicate`,
        LEAVE: (id: string) => `/workspaces/${id}/leave`,
        PERMISSIONS: (id: string) => `/workspaces/${id}/permissions`,
        ACTIVITY: (id: string) => `/workspaces/${id}/activity`,
        STATS: '/workspaces/stats',
        PUBLIC: '/workspaces/public',
        SEARCH: '/workspaces/search',
        MEMBERS: (id: string) => `/workspaces/${id}/members`,
        MEMBER: (id: string, userId: string) => `/workspaces/${id}/members/${userId}`,
        INVITE: (id: string) => `/workspaces/${id}/members`,
        MEMBER_ROLE: (workspaceId: string, userId: string) => `/workspaces/${workspaceId}/members/${userId}/role`,
        TRANSFER_OWNERSHIP: (id: string) => `/workspaces/${id}/transfer-ownership`,
        BULK_MEMBER_OPERATION: (id: string) => `/workspaces/${id}/members/bulk`,
    },
    SYSTEM: {
        HEALTH: '/health',
        INFO: '/',
        API_STATUS: '/api',
    },
    TAGS: {
        LIST: '/tags',
        CREATE: '/tags',
        BY_ID: (id: string) => `/tags/${id}`,
        UPDATE: (id: string) => `/tags/${id}`,
        DELETE: (id: string) => `/tags/${id}`,
    },
    FILES: {
        LIST: '/files',
        UPLOAD: '/files/upload',
        BULK_UPLOAD: '/files/bulk-upload',
        BY_ID: (id: string) => `/files/${id}`,
        DOWNLOAD: (id: string) => `/files/${id}/download`,
        DELETE: (id: string) => `/files/${id}`,
    },
    NOTIFICATIONS: {
        LIST: '/notifications',
        BY_ID: (id: string) => `/notifications/${id}`,
        MARK_READ: (id: string) => `/notifications/${id}/read`,
        MARK_ALL_READ: '/notifications/read-all',
        DELETE: (id: string) => `/notifications/${id}`,
    },
} as const
